{
	"info": {
		"_postman_id": "33de9720-5ecc-4d19-8d22-fbb7f6b9b59d",
		"name": "Tests v8",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Sigh Up",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8d1fd86b-16d1-418f-bc72-a21f96e6dce9",
						"exec": [
							"pm.test(\"Status code is 204\", () => {",
							"  pm.expect(pm.response.code).to.eql(204);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "80599da7-4bef-4b48-817e-bb13b8779c92",
						"exec": [
							"const uuid = require('uuid');",
							"",
							"postman.setEnvironmentVariable(\"email\", `ex_${uuid.v4()}@mple.com`);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"First Name\",\n    \"email\": \"{{email}}\",\n    \"password\": \"12345678\",\n    \"phone\": \"9997771111\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/auth/sign-up/",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"sign-up",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0eb5319e-1de9-481e-a2cf-191a0fc94398",
						"exec": [
							"pm.test(\"Status code is 204\", () => {",
							"  pm.expect(pm.response.code).to.eql(204);",
							"});",
							"",
							"pm.test(\"Session-id key in cookie is present\", () => {",
							"  pm.expect(pm.cookies.has('session-id')).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "b0f66697-f751-4586-9de1-1c2c6799009e",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{email}}\",\n    \"password\": \"12345678\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/auth/login/",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"login",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Pay In",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9fd3dd6c-c990-4d2d-b55e-a37c2be70de4",
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"  pm.expect(pm.response.code).to.eql(200);",
							"});",
							"",
							"pm.test(\"Balance must be 20\", () => {",
							"  const responseJson = pm.response.json();",
							"  pm.expect(responseJson.value).to.eql(20);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "8b196370-e399-42fe-a339-1692e9a55e30",
						"exec": [
							"const uuid = require('uuid');",
							"",
							"postman.setEnvironmentVariable(\"correlationId\", uuid.v4());"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "correlation-id",
						"value": "{{correlationId}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"amount\": 20\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/billing/balance/pay-in",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"billing",
						"balance",
						"pay-in"
					]
				}
			},
			"response": []
		},
		{
			"name": "Pay In Locked",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "97142796-b465-4583-b3f7-8ce3a787aa88",
						"exec": [
							"pm.test(\"Status code is 409\", () => {",
							"  pm.expect(pm.response.code).to.eql(409);",
							"});",
							"",
							"pm.test(\"Locked error\", () => {",
							"  const responseJson = pm.response.json();",
							"  pm.expect(responseJson.code).to.eql('locked');",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "4d1f5158-84a6-4343-85c1-5a1bdc9c4bc0",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "correlation-id",
						"type": "text",
						"value": "{{correlationId}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"amount\": 20\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/billing/balance/pay-in",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"billing",
						"balance",
						"pay-in"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "323f9f2d-b5ef-4447-9a9f-f31ab297df88",
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"  pm.expect(pm.response.code).to.eql(200);",
							"});",
							"",
							"pm.test(\"Order created\", () => {",
							"  const responseJson = pm.response.json();",
							"  pm.expect(responseJson.status).to.eql(\"accept_pending\");",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "c5cbc897-93a1-43f0-9146-59512a45f505",
						"exec": [
							"const uuid = require('uuid');",
							"",
							"postman.setEnvironmentVariable(\"correlationId\", uuid.v4());"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "correlation-id",
						"value": "{{correlationId}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"amount\": 10\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/order/orders",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"order",
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "new Create Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "72def545-c29a-4197-999b-aa800e1f80b8",
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"  pm.expect(pm.response.code).to.eql(200);",
							"});",
							"",
							"pm.test(\"Order created\", () => {",
							"  const responseJson = pm.response.json();",
							"  pm.expect(responseJson.status).to.eql(\"accept_pending\");",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "c813ea47-dd03-4b79-95c9-54126d5a1c31",
						"exec": [
							"const uuid = require('uuid');",
							"",
							"postman.setEnvironmentVariable(\"correlationId\", uuid.v4());"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "correlation-id",
						"value": "{{correlationId}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"amount\": 10\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/order/orders",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"order",
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Order Locked",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cc7bfebc-da63-43c5-bbb3-f93e4cc5a7ca",
						"exec": [
							"pm.test(\"Status code is 409\", () => {",
							"  pm.expect(pm.response.code).to.eql(409);",
							"});",
							"",
							"pm.test(\"Locked error\", () => {",
							"  const responseJson = pm.response.json();",
							"  pm.expect(responseJson.code).to.eql(\"locked\");",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "9c05de7f-7e0a-4bac-8dc5-68491834e2a4",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "correlation-id",
						"type": "text",
						"value": "{{correlationId}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"amount\": 10\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/order/orders",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"order",
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9752c3e7-8afc-42f1-887f-80502895dad1",
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"  pm.expect(pm.response.code).to.eql(200);",
							"});",
							"",
							"pm.test(\"Balance must be 0\", () => {",
							"  const responseJson = pm.response.json();",
							"  pm.expect(responseJson.value).to.eql(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/billing/balance/",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"billing",
						"balance",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get message",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "edb9ddab-f492-42b1-becc-7fafcfb66c11",
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"  pm.expect(pm.response.code).to.eql(200);",
							"});",
							"",
							"pm.test(\"Order created successful\", () => {",
							"  const responseJson = pm.response.json();",
							"  pm.expect(responseJson).to.have.length(3);",
							"  pm.expect(responseJson[0].body).to.include(\"Поздравляем\");",
							"  pm.expect(responseJson[1].body).to.include(\"успешно создан\");",
							"  pm.expect(responseJson[2].body).to.include(\"успешно создан\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-auth-token",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MjMsImVtYWlsIjoiZXhfMDIwQG1wbGUuY29tIiwicGhvbmUiOiIxMjMxMjMxMjMiLCJ1c2VybmFtZSI6InVzZXIiLCJpYXQiOjE2NDUxMjM2OTIsImV4cCI6MTY0NTIxMDA5Mn0.A7i7HIf4zHMUqrSSEk5ml8N4t1l1KQp9mBJGtgT_ShA",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{baseUrl}}/notify/message/",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"notify",
						"message",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get list",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1a6f11e9-a25d-4f3b-a485-023debf03e99",
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"  pm.expect(pm.response.code).to.eql(200);",
							"});",
							"",
							"pm.test(\"Orders list\", () => {",
							"  const responseJson = pm.response.json();",
							"  pm.expect(responseJson.orders).to.have.length(2);",
							"  pm.expect(responseJson.orders[0].status).to.eql(\"accepted\");",
							"  pm.expect(responseJson.orders[1].status).to.eql(\"accepted\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-auth-token",
						"type": "text",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MywiZW1haWwiOiJleF8wMDFAbXBsZS5jb20iLCJwaG9uZSI6IjEyMzEyMzEyMyIsInVzZXJuYW1lIjoidXNlciIsImlhdCI6MTY0NTEwMTcxNCwiZXhwIjoxNjQ1MTg4MTE0fQ.Eg4axYnSOr-I11Zo9iFSd-5S38i29tr7SAH5CB7xBgY"
					}
				],
				"url": {
					"raw": "http://{{baseUrl}}/order/orders/list",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"order",
						"orders",
						"list"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ddc4f2d1-ce23-4b64-86d9-c5f15f958f83",
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"  pm.expect(pm.response.code).to.eql(200);",
							"});",
							"",
							"pm.test(\"User data\", () => {",
							"  const responseJson = pm.response.json();",
							"  pm.expect(responseJson.username).to.eql(\"First Name\");",
							"  pm.expect(responseJson.phone).to.eql(\"9997771111\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-auth-token",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NSwiZW1haWwiOiJleF8wMjNAbXBsZS5jb20iLCJwaG9uZSI6IjEyMzEyMzEyMyIsInVzZXJuYW1lIjoidXNlciIsImlhdCI6MTY0NTEzNjA2NywiZXhwIjoxNjQ1MjIyNDY3fQ.Vfs7fNciKslBEwQ-xjCSdHsNrVedfbpa2zSV4U6jRYg",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://{{baseUrl}}/profile/user/",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"profile",
						"user",
						""
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}