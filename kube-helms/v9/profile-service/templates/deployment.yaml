apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "profile-service.fullname" . }}
  labels:
    {{- include "profile-service.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "profile-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "profile-service.selectorLabels" . | nindent 8 }}
    spec:
      restartPolicy: Always
      initContainers:
        - name: check-db-ready
          image: postgres:latest
          env:
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_HOST
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_PORT
          command:
            - sh
            - "-c"
            - |
              until pg_isready -h $POSTGRES_HOST -p $POSTGRES_PORT;
              do echo waiting for database; sleep 2; done;
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          env:
            - name: RABBITMQ_HOST
              value: rmq-rabbitmq
            - name: RABBITMQ_USER
              value: user
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rmq-rabbitmq
                  key: rabbitmq-password
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PROFILE_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PROFILE_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_DB
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_HOST
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_PORT
