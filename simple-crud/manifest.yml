apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: crud-ns
  labels:
    app: postgres
data:
  POSTGRES_DB: otusdb
  POSTGRES_PORT: "5432"
  POSTGRES_HOST: crud-postgresql
  POSTGRES_USER: crud-user
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret-config
  namespace: crud-ns
type: Opaque
data:
  dbpassword: Y3J1ZF9wYXNzd29yZA==
---
apiVersion: batch/v1
kind: Job
metadata:
  name: postgres-migration
  namespace: crud-ns
  labels:
    app: postgres-migration
spec:
  template:
    metadata:
      name: postgres-migration
      labels:
        app: postgres-migration
    spec:
      restartPolicy: Never
      containers:
        - name: create-table
          envFrom:
            - configMapRef:
                name: postgres-config
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret-config
                  key: dbpassword
          image: postgres:latest
          command:
            - sh
            - "-c"
            - |
              PGPASSWORD=$POSTGRES_PASSWORD psql -d $POSTGRES_DB -U $POSTGRES_USER -h $POSTGRES_HOST -p $POSTGRES_PORT <<'EOF'
              CREATE TABLE IF NOT EXISTS users (
                id SERIAL,
                email VARCHAR UNIQUE,
                phone VARCHAR,
                username VARCHAR
              );
              EOF
  backoffLimit: 4
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: crud-ingress
  namespace: crud-ns
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
    - host: arch.homework
      http:
        paths:
          - path: /(.*)
            pathType: Prefix
            backend:
              service:
                name: crud-service
                port:
                  number: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: crud-service
  namespace: crud-ns
spec:
  type: NodePort
  selector:
    app: crud-service
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: crud-service
  namespace: crud-ns
spec:
  replicas: 2
  selector:
    matchLabels:
      app: crud-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: crud-service
    spec:
      containers:
        - name: crud-service
          image: vldmr/simple-crud:1.0.3
          envFrom:
            - configMapRef:
                name: postgres-config
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret-config
                  key: dbpassword
          ports:
            - containerPort: 8000